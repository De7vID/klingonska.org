#!/usr/bin/perl -w
use strict;

# TODO span element
# LOOK INTO:
#   * escapes
#   * autolinks (<...://..>, <...@...>)
#   * line break
#   * links
#   * images
#   * (dl - definition list)
#   * (table)
#
#   NAME => [ QR, LIST[, SUB] ],
#

my $sources = qr/(?:tkd|tkw|kgt|hq|ck)/i;

{
    root => [
        qr{},
        [ qw(
            suffix_guide
            head1 head2 head3 head4 head5 head6 hr
            blockquote bulletlist numberlist verbatim html
            paragraph
        ) ],
    ],
    plain => [
        qr{ \G ((?:
               [^\\`*_\{"<\[-] |
               \\. |
               \s [`*_] \s |
               \[(?!$sources[^]]*\]) |
               \*(?![^*] *\*) |
               \_(?![^_] *\_) |
               \<(?![^>] *\>) |
               \{(?![^\}]*\}) |
               (?<!-) - (?!-)
        )+) }xi,
        [],    # no sub-contexts
        sub {
            my $x = first(pop());
            for ($x) {
                s{ \s+ }{ }xg; # remove newlines
                s{ (?: \\(.) | ([^\\]) ) }{ $1 or $2 }xmge;# remove escapes
            }
            return $x;
        },
    ],
    endash => [ qr{ (--)  }x, [], sub { '--' }  ],
    emdash => [ qr{ (---) }x, [], sub { '---' } ],
    doublequote => [
        qr{ \"(?!\s) ( .*? ) (?<![\s])\" }x,                  # "..."
        [ qw( emdash endash english klingon strong emphasis code plain ) ],
    ],
    strong => [
        qr{  (?:
            \_\_(?!\s) ( (?:[^\\\_]|\\.|\s\_)* ) (?<![\s])\_\_ |    # _..._
            \*\*(?!\s) ( (?:[^\\\*]|\\.|\s\*)* ) (?<![\s])\*\*      # *...*
        ) }x,
        [ qw( doublequote emphasis plain ) ],
        sub { join("", grep { defined() } list(pop())) },
    ],
    emphasis => [
        qr{ (?:
            \_(?!\s) ( (?:[^\\\_]|\\.|\s\_)* ) (?<![\s])\_ |        # _..._
            \*(?!\s) ( (?:[^\\\*]|\\.|\s\*)* ) (?<![\s])\*          # *...*
        ) }x,
        [ qw( doublequote plain ) ],
        sub { join("", grep { defined() } list(pop())) },
    ],
    code  => [                          # `code`
        qr{ \`( (?: [^`] | \\[`] )* )\` }x,
        [],
    ],
    head1 => [
        qr{ (?:                     # "#" or "===" line
            \#{1}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) |
            (.+) \n ={3,} (?:\n+|\z)
        ) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
        sub { join("", grep { defined() } list(pop())) },
    ],
    head2 => [
        qr{ (?:                     # "##" or "---" line
            \#{2}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) |
            (.+) \n -{3,} (?:\n+|\z)
        ) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
        sub { join("", grep { defined() } list(pop())) },
    ],
    head3 => [                         # "###"
        qr{ \#{3}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
    head4 => [                         # "####"
        qr{ \#{4}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
    head5 => [                         # "#####"
        qr{ \#{5}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
    head6 => [                         # "######"
        qr{ \#{6}(?!\#) \s* (.+?) \s* \#* (?:\n+|\z) }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
    blockquote => [                            # ">" (preceded by 1-3 spaces)
        qr{ ( \s{0,3} \> (?:.+\n)* .+ ) \n* }x,
        [ qw( blockquote verbatim paragraph ) ],
        sub { regex(first(pop()), qr{ ^ \s{0,3} > }mx) },
    ],
    bulletlist => [                            # "* " (preceded by 1-3 spaces)
        qr{ ( \s{0,3} [o*+-] [\t ]+ (?:.+\n)* .+ ) \n* }x,
        [ qw( bulletlist_item ) ],
        sub { regex(first(pop()), qr{ ^ \s{0,3} [o*+-] \s+ }mx) },
    ],
    bulletlist_item => [
        qr{ (.*) (?= \n \s{0,3} [o*+-] \s+ | \z ) \n* }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
        sub { regex(first(pop()), qr{ ^ \s{0,3} \d+\. \s+ }mx) },
    ],
    numberlist => [                            # "1. " (preceded by 1-3 spaces)
        qr{ ( \s{0,3} \d+\. [\t ]+ (?:.+\n)* .+ ) \n* }x,
        [ qw( numberlist_item ) ],
    ],
    numberlist_item => [
        qr{ (.*) (?= \n \s{0,3} \d+\. \s+ | \z ) \n* }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
    hr => [                            # 3 or more -_*
        qr{ [\t ]* (?: [-_*][\t ]* ){2,} [-_*] \s* (?:\n+|\z) }x,
        [],
    ],
    verbatim => [                     # 4 or more spaces
        qr{ ( \s{4,} (?:.+\n)* .+ ) \n* }x,
        [],
        sub {
            # strip off same amount of indent as
            # there is on the 1st line from each line
            my $text = first(pop());
            my ($indent) = $text =~ m{ ^ ( \s* ) }x;
            regex($text, qr{ ^ \Q$indent\E }mx);
        },
    ],
    html => [                           # "<"
        qr{ ( \< (?:.+\n)* .+ ) \n* }x,
        [],
    ],
    paragraph => [
        qr{ ( (?:.+\n)* .+ ) \n* }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
        sub { regex(first(pop()), qr{ ^ \s{0,3} }mx) },
    ],

    # KA-specific
    klingon => [
        qr{ \{ ([^\}]*) \} }x,
        [ qw(plain) ],
    ],
    english => [
        qr{ \< ([^\>]*) \> }x,
        [ qw(doublequote plain) ],
    ],
    reference => [
        qr{ \[ ($sources[^]]*) \] }xism,
        [ qw( plain ) ],
    ],
    suffix_guide => [
        qr{ \[\[start: \s* suffixguide\]\] \n+
            ( .*? ) \n+
            \[\[end:   \s* suffixguide\]\] \n+
        }xs,
        [ qw( sg_head1 sg_head2 sg_head3 sg_paragraph ) ],
    ],
    sg_head1 => [                      # "===" line
        qr{ ([0-9R]+)\. \s* (.+?) \s* \[(.+?)\] \n ={3,} (?:\n+|\z) }x,
        [],
        sub {
            my $self = shift();
            my ($suffixtype, $english, $reference) = list(pop());
            [ 
                [ sg_head1_type      => $self->parse([ plain     => $suffixtype ]) ],
                [ sg_head1_text      => $self->parse([ plain     => $english    ]) ],
                [ sg_head1_reference => $self->parse([ reference => $reference  ]) ],
            ];
        },
    ],
    sg_head2 => [                     # "---" line
        qr{ \{(.+)\} \s+ \<(.+)\> (?: \s+ \[(.+)\] )? \n -{3,} (?:\n+|\z) }x,
        [],
        sub {
            my $self = shift();
            my ($klingon, $english, $reference) = list(pop());
            [ 
                [ sg_head2_klingon => $self->parse([ klingon => $klingon ]) ],
                [ sg_head2_english => $self->parse([ english => $english ]) ],
                defined($reference) ?
                    [ sg_head2_reference => $self->parse([ reference => $reference ]) ] : ()
            ];
        },
    ],
    sg_head3 => [                     # "---" line
        qr{ (.+) \n -{3,} (?:\n+|\z) }x,
        [],
        sub {
            my $self = shift();
            [ $self->parse([ plain => first(pop()) ]) ];
        },
    ],
    sg_paragraph => [
        qr{ ( (?:.+\n)* .+ ) \n* }x,
        [ qw( emdash endash english klingon strong emphasis code doublequote reference plain ) ],
    ],
},

#[eof]
